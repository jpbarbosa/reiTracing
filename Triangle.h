#ifndef _H_Triangle#define _H_Triangle/* Needed libraries. */#include <cmath>/* Defines the needed classes and their headers. */class Ray;#include "BasicStructures.h"#include "Object.h"/* Header for the Sphere class. */class Triangle : public Object{private:    /* - - - - - - - - - - - - ATTRIBUTES - - - - - - - - - -*/        /* The normal of the triangle. */    vector normal;    point vertixes[3];public:    /* - - - - - - - CONSTRUCTOR & DESTRUCTOR - - - - - - - -*/    /* Constructor & destructor. */    explicit Triangle(double rC, double gC, double bC);    explicit Triangle();    ~Triangle();    /* - - - - - - - OTHER METHODS - - - - - - - -*/    /* Determinates whether the ray intersects this sphere or not. */    bool intersects(Ray &ray, double &rT0, double &rT1);    void newDirection(Ray &ray, double &t);    bool refractionRedirection(Ray &ray, double t0, double t1);    void intersectionPointNormal(Ray &ray, vector &normalInt);    bool intersectsPlane(Ray &ray, double &rT0);    void crossProduct(point p1, point p2, point p3, point p4, vector &n);    /* - - - - - - - GETTERS & SETTERS - - - - - - - -*/    vector getNormal();    void setNormal();    void setVertix(int vertixNo, double px, double py, double pz);	};#endif