#ifndef _H_PlaneChess#define _H_PlaneChess/* Needed libraries. */#include <cmath>/* Defines the needed classes and their headers. */class Ray;#include "BasicStructures.h"#include "Object.h"/* Header for the Sphere class. */class PlaneChess : public Object{private:    /* - - - - - - - - - - - - ATTRIBUTES - - - - - - - - - -*/    vector normal;    double squareSize;public:    /* - - - - - - - CONSTRUCTOR & DESTRUCTOR - - - - - - - -*/    /* Constructor & destructor. */    explicit PlaneChess(double x, double y, double z, vector n, double sS);    explicit PlaneChess();    ~PlaneChess();    /* - - - - - - - OTHER METHODS - - - - - - - -*/    /* Determinates whether the ray intersects this sphere or not. */    bool intersects(Ray &ray, double &rT0, double &rT1);    void newDirection(Ray &ray, double &t);    bool refractionRedirection(Ray &ray, double t0, double t1);    void intersectionPointNormal(Ray &ray, vector &normalInt);    /* - - - - - - - GETTERS & SETTERS - - - - - - - -*/    vector getNormal();};#endif